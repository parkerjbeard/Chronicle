[package]
name = "chronicle-packer"
version = "0.1.0"
edition = "2021"
authors = ["Chronicle Team"]
description = "Chronicle packer service for processing ring buffer data to Parquet/HEIF storage"
license = "MIT"
repository = "https://github.com/chronicle/chronicle"

[[bin]]
name = "chronicle-packer"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-cron-scheduler = "0.10"
tokio-util = "0.7"

# Arrow and Parquet processing
# arrow = "50.0" # Disabled for compatibility testing
# arrow-ipc = "50.0"
# parquet = "50.0"
datafusion = "34.0"

# Serialization and deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# Compression
flate2 = "1.0"
zstd = "0.13"

# Encryption
aes-gcm = "0.10"
argon2 = "0.5"
rand = "0.8"
chacha20poly1305 = "0.10"

# Image processing
image = "0.24"
imageproc = "0.23"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"

# Configuration
config = "0.14"
dirs = "5.0"

# CLI argument parsing
clap = { version = "4.4", features = ["derive"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# File system operations
walkdir = "2.4"
tempfile = "3.8"

# Unix-specific features
libc = "0.2"
nix = "0.27"

# Metrics and monitoring
prometheus = { version = "0.13", optional = true }
sysinfo = { workspace = true }

# Ring buffer FFI (placeholder - will be implemented separately)
# ring-buffer-ffi = { path = "../ring-buffer", optional = true }

# Time handling
chrono = { workspace = true }

# Memory mapping
memmap2 = "0.9"

# Checksums and hashing
sha2 = "0.10"
blake3 = "1.5"

# UUID generation
uuid = { version = "1.6", features = ["v4"] }

# AWS SDK for S3 cloud backup - Compatible versions
aws-config = { version = "0.56.1", optional = true }
aws-sdk-s3 = { version = "0.36.0", optional = true }
aws-types = { version = "0.56.1", optional = true }
aws-credential-types = { version = "0.56.1", optional = true }

# CPU detection
num_cpus = "1.16"

# Base64 encoding - Compatible with Rust 1.76.0
base64 = "0.21.7"

# Regex for validation (moved to input validation section)

# HTTP server for metrics and API
hyper = { version = "0.14", features = ["full"] }
axum = { version = "0.7", features = ["tokio", "json", "macros", "tower-log"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["cors", "limit", "timeout", "trace"] }

# Security and authentication - Compatible with Rust 1.76.0
jsonwebtoken = "9.2"
# ring = "0.16.20" # Removed to avoid edition2024 dependency conflicts
rustls = "0.21.12"
tokio-rustls = "0.24.1"
rustls-pemfile = "1.0.4"
rcgen = "0.10.0"

# Rate limiting
governor = "0.6"
nonzero_ext = "0.3"

# Certificate parsing and utilities
x509-parser = "0.15.1"
hex = "0.4"
time = { version = "0.3", features = ["parsing", "formatting", "macros"] }

# Input validation
regex = "1.10"
unicode-general-category = "0.6"

# HTTP client for cloud operations
reqwest = { version = "0.11.24", features = ["json", "rustls-tls", "stream"], optional = true }
bytes = "1.5"

# Platform-specific features for macOS
[target.'cfg(target_os = "macos")'.dependencies]
security-framework = "2.9"
core-foundation = "0.9"

[dev-dependencies]
criterion = { workspace = true, features = ["html_reports"] }
proptest = "1.4.0"
tokio-test = { workspace = true }
tempfile = { workspace = true }
futures = { workspace = true }

[features]
default = ["encryption", "metrics"]
encryption = []
metrics = ["prometheus"]
cloud-backup = ["aws-config", "aws-sdk-s3", "aws-types", "aws-credential-types", "reqwest"]
auto-backup = []

[[bench]]
name = "packer_benchmarks"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.dev]
opt-level = 0
debug = true